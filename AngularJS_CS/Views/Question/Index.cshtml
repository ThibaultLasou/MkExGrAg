@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var list = ViewBag.ListRep as MultiSelectList;
}
@model AngularJS_CS.ViewModels.QuestionViewModel


<link rel="stylesheet/less" href="~/Content/less/questionnaire.less"/>
<h2 id="Title">Nouveau Questionnaire</h2>


@using (Html.BeginForm("Action", "Question", new { id_exp = HttpContext.Current.User.Identity.Name }, FormMethod.Post, null))
{
    <div class="form-horizontal">
        Message ordinaire: @Html.CheckBoxFor(model => model.question, htmlAttributes: new { id = "is_quest", onchange = "questionswitch(this)", value = true})
        <div class="form-group">
            <div class="col-ld-10">
                <h5>Destinataires</h5>
                @Html.DropDownList("desinchoi", ViewBag.ListIndividus as SelectList, "Individus", htmlAttributes: new { id = "destinchoi", onchange = "newDestin(this.value)", type = "destlist" })
                @Html.DropDownList("destgrchoi", ViewBag.ListGroupe as SelectList, "Groupes", htmlAttributes: new { id = "destgrchoi", onchange = "newDestgr(this.value)", type = "destlist" })
                @Html.TextBoxFor(model => model.Dests, htmlAttributes: new { id = "destbox", type = "destinataire", placeholder = "Destinataire(s)", required = true })
                <h5>Sujet du questionnaire</h5>
                @Html.TextBoxFor(model => model.Sujet, htmlAttributes: new { type = "sujet", placeholder = "sujet" })
            </div>
            @Html.TextAreaFor(model => model.Detail, htmlAttributes: new { type = "detail", placeholder = "Details", id = "contentarea" })
            @Html.ListBoxFor(model => model.Reponses, list, htmlAttributes: new { id = "rep_list", type = "reponses", onchange = "custom_type()", onclick = "custom_type()"})
            @Html.DropDownListFor(model => model.Type, ViewBag.ListType as SelectList, "Type de questionnaire", htmlAttributes: new { id = "type_choice", onchange = "typechose(this.value)" })
            <input type="submit" class="btn btn-block" />
        </div>
    </div>
}

@using (Html.BeginForm("Ajout", "Question", null, FormMethod.Post, null))
{    <div id="repZone" class="col-md-3 col-xs-12 col-sm-3">
        <ul class="download-btn">
            <li>
                <div>
                    <a id="repform" class="btn btn-default btn-andriod">Nouveau</a>
                </div>
                <div id="hidden_divrep" class="hidden">
                    <div class="formrepholder">
                        <fieldset>
                            @Html.TextBoxFor(m => m.Rep, htmlAttributes: new { id = "new_rep", type = "reponse", placeholder = "Réponse" })
                            <input class="btn btn-andriod" value="Ajouter" type="submit" />

                        </fieldset>
                    </div>
                </div>
            </li>
        </ul>
    </div> }

<div>
    @Html.ActionLink("Back to List", "../")
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/AllOurScripts/newrep.js"></script>
<script src="~/Scripts/AllOurScripts/Repshow.js"></script>
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>