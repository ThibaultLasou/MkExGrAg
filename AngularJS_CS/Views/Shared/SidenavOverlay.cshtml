@{
    Layout = null;
    <link rel="stylesheet/less" href="~/Content/less/sidenav.less">
}
@using AngularJS_CS.ViewModels
@using AngularJS_CS.Controllers
@using AngularJS_CS.Models
@model AngularJS_CS.ViewModels.AnswerView
<div id="Overlay" class="overlay" onclick="closeNav()">

</div>

<div id="Sidenav" class="sidenav">
    <a href="javascript:void(0)" class="closebtn" onclick="closeNav()">&times;</a>
    @if (Request.IsAuthenticated)
            {
        <section id="message_section">
            <a href="#" type="title">Messages</a>
            <div>
                @foreach (Notification_Simple mes in new Dal().GetIndividus().Find(i => i.Id == int.Parse(HttpContext.Current.User.Identity.Name)).Notification_Simple)
                {
                    using (Html.BeginForm("Retorque", "Question", FormMethod.Post))
                    {
                        if (!mes.Message.lu /*&& mes.Message.envoi.Hour <= System.DateTime.Now.Hour + 1*/)
                        {
                            if (mes.Message.sujet == "" || mes.Message.sujet == null)
                            { @Html.ActionLink("Aucun sujet", "Read", "Question", null, htmlAttributes: new { type = "subtitle" });/*<a type="subtitle" href="#">Aucun sujet</a>*/
                            }
                            else
                            { @*@Html.ActionLink(mes.Message.sujet, "Read", "Question", Model, htmlAttributes: new { type = "subtitle" });*@ <a type="subtitle" href="#">@(mes.Message.sujet)</a> }
                            <p>Envoyé le @(mes.Message.envoi)</p>
                            <p>@(mes.Message.contenu)</p>
                            if (mes.Message.Questionnaire.Count > 0)
                            {
                                Model.id_message = mes.Id_message;
                                Model.actualurl = HttpContext.Current.Request.Url.AbsolutePath;
                                mes.Message.recu = true;
                                Model.subject = mes.Message.sujet;
                                Model.dest = mes.Message.Id_expediteur;
                                ViewBag.Reps = new SelectList(mes.Message.Questionnaire.ElementAt(0).Reponses, "Id_reponse", "Option_Questionnaire.valeur");
                                @Html.DropDownListFor(model => model.repchosen, ViewBag.Reps as SelectList, "Réponses", htmlAttributes: new { name = "repchosen", id = "list_rep", type = "rep_list", required = "True" })
                            }
                            @Html.TextAreaFor(model => model.rep, htmlAttributes: new { type = "repbox", id = "reptext", name = "rep" });
                            @Html.HiddenFor(model => model.subject)
                            @Html.HiddenFor(model => model.dest)
                            @Html.HiddenFor(model => model.actualurl)
                            @Html.HiddenFor(model=>model.id_message)
                            <input id="Answer" type="submit" value="Répondre &#128389;" onclick="closeNav()" />
                        }
                    }
                }
            </div>
        </section>
    }
    <a href="#">About</a>
    <a href="#">Services</a>
    <a href="#">Clients</a>
    <a href="#">Contact</a>
</div>