@{
    Layout = null;
    <link rel="stylesheet/less" href="~/Content/less/sidenav.less">
}

<div id="Overlay" class="overlay" onclick="closeNav()">

</div>

<div id="Sidenav" class="sidenav">
    <a href="javascript:void(0)" class="closebtn" onclick="closeNav()">&times;</a>
    <section id="message_section">
        <a href="#" type="title">Messages</a>
        @if (Request.IsAuthenticated)
            {
            <div>
                @foreach (AngularJS_CS.Models.Notification_Simple mes in new AngularJS_CS.Models.Dal().GetIndividus().Find(i => i.Id == int.Parse(HttpContext.Current.User.Identity.Name)).Notification_Simple)
                {
                    using (Html.BeginForm())
                    {
                        if (!mes.Message.lu && mes.Message.envoi.Hour <= System.DateTime.Now.Hour + 1)
                        {
                            if (mes.Message.sujet == "")
                            { <a type="subtitle" href="#">Aucun sujet</a> }
                            else
                            { <a type="subtitle" href="#">@(mes.Message.sujet)</a> }
                            <p>Envoyé le @(mes.Message.envoi)</p>
                                <p>@(mes.Message.contenu)</p>
                            if (mes.Message.Questionnaire.Count > 0)
                            {
                                <select id="list_rep" data-val="true" type="rep_list" name="posrep" required="True">
                                    @{
                                        <option typeof="reponses" value="">Réponses</option>
                                        foreach (AngularJS_CS.Models.Reponses rep in mes.Message.Questionnaire.ElementAt(0).Reponses)
                                        {
                                            <option type="reponses" value=@(rep.Id_reponse)>@(rep.Option_Questionnaire.valeur) </option>
                                        }
                                    }
                                </select>
                                        }
                                        <textarea type="repbox" id="reptext" name="reptxt"></textarea>
                                            <input type="submit" value="Répondre &#128389;" onclick="closeNav()" />
                                                }
                                            }
                                        }
            </div>
                                        }

    </section>
    <a href="#">About</a>
    <a href="#">Services</a>
    <a href="#">Clients</a>
    <a href="#">Contact</a>
    @*<div class="container">
        <input type="text" id="message" />
        <input type="button" id="sendmessage" value="Send" />
        <input type="hidden" id="displayname" />
        <ul id="discussion"></ul>
    </div>*@
</div>

@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the jQuery library. -->
    @*<script src="~/Scripts/Frameworks/jquery-3.1.1.min.js"></script>
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.2.2.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>*@
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        $(function () {
            var chat = $.connection.chatHub;
            // Create a function that the hub can call to broadcast messages.
            chat.client.broadcastMessage = function (name, message) {
                // Html encode display name and message. 
                var encodedName = $('<div />').text(name).html();
                var encodedMsg = $('<div />').text(message).html();
                // Add the message to the page. 
                $('#discussion').append('<li><strong>' + encodedName
                    + '</strong>:&nbsp;&nbsp;' + encodedMsg + '</li>');
            };
            // Get the user name and store it to prepend to messages.
            $('#displayname').val(prompt('Enter your name:', ''));
            // Set initial focus to message input box.  
            $('#message').focus();
            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#sendmessage').click(function () {
                    // Call the Send method on the hub. 
                    chat.server.send($('#displayname').val(), $('#message').val());
                    // Clear text box and reset focus for next comment. 
                    $('#message').val('').focus();
                });
            });
        });
    </script>
}